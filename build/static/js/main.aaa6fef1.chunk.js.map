{"version":3,"sources":["components/home.js","components/proposals.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","description","setDescription","newmemberAddress","setNewMemberAddress","memberAddress","setMemberAddress","votingpower","setVotingPower","show","setShow","handleClose","showNewMemberModal","setShowNewMemberModal","handleNewMemberModalClose","showMemberModal","setShowMemberModal","handleMemberModalClose","Navbar","bg","Container","Brand","href","Toggle","Nav","className","Badge","cUSDBalance","Collapse","Button","onClick","variant","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","as","placeholder","style","height","onChange","e","target","value","Footer","disabled","addProposal","type","addMember","removeMember","Proposals","Row","xs","md","proposals","map","proposal","Col","Card","Stack","direction","gap","proposalId","yesVotes","noVotes","walletAddress","proposer","executeProposal","class","vote","index","App","contract","setcontract","address","setAddress","kit","setKit","setcUSDBalance","setProposals","connectToWallet","a","window","celo","enable","web3","Web3","newKitFromWeb3","eth","getAccounts","accounts","user_address","defaultAccount","console","log","alert","getBalance","useCallback","getTotalBalance","balance","USDBalance","cUSD","shiftedBy","toFixed","Contract","celodao","getProposals","methods","getProposalsLength","call","proposalsLength","_proposals","Promise","resolve","reject","getProposal","executed","push","all","_description","createProposal","send","from","_address","_votingPower","_proposalId","_vote","executedProposal","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaa6fef1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FloatingLabel,\r\n  Nav,\r\n  Badge,\r\n  Container,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\n\r\nconst Home = (props) => {\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [newmemberAddress, setNewMemberAddress] = useState(\"\");\r\n\r\n  const [memberAddress, setMemberAddress] = useState(\"\");\r\n\r\n  const [votingpower, setVotingPower] = useState(0);\r\n\r\n  const isFormFilled = () => description;\r\n  const isNewMemberFormFilled = () => newmemberAddress;\r\n  const isMemberFormFilled = () => memberAddress;\r\n\r\n  // proposal modal functions\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  // member modal functions\r\n  const [showNewMemberModal, setShowNewMemberModal] = useState(false);\r\n\r\n  const handleNewMemberModalClose = () => setShowNewMemberModal(false);\r\n  const handleNewMemberModalShow = () => setShowNewMemberModal(true);\r\n\r\n  // remove member modal functions\r\n  const [showMemberModal, setShowMemberModal] = useState(false);\r\n\r\n  const handleMemberModalClose = () => setShowMemberModal(false);\r\n  const handleMemberModalShow = () => setShowMemberModal(true);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Celo Dao</Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Nav className=\"me-auto\">\r\n            <Badge bg=\"secondary\" className=\"ms-auto\">\r\n              Balance {props.cUSDBalance}cUSD\r\n            </Badge>\r\n          </Nav>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Button onClick={handleShow} variant=\"dark\">\r\n              <h5> Create Proposal </h5>\r\n            </Button>\r\n\r\n            <Button onClick={handleNewMemberModalShow} variant=\"dark\">\r\n              <h5> Add New Member </h5>\r\n            </Button>\r\n\r\n            <Button onClick={handleMemberModalShow} variant=\"dark\">\r\n              <h5> Remove Member </h5>\r\n            </Button>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Proposal</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <FloatingLabel\r\n              controlId=\"inputDescription\"\r\n              label=\"Description\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"description\"\r\n                style={{ height: \"80px\" }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              props.addProposal(description);\r\n              handleClose();\r\n            }}\r\n          >\r\n            Add Proposal\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showNewMemberModal}\r\n        onHide={handleNewMemberModalClose}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Memnber</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <FloatingLabel\r\n              controlId=\"inputAddress\"\r\n              label=\"MemberAddress\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setNewMemberAddress(e.target.value);\r\n                }}\r\n                placeholder=\"Address\"\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"inputVotingPower\"\r\n              label=\"Voting Power\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  setVotingPower(e.target.value);\r\n                }}\r\n                placeholder=\"Select Voting Power\"\r\n              />\r\n            </FloatingLabel>\r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"outline-secondary\"\r\n            onClick={handleNewMemberModalClose}\r\n          >\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isNewMemberFormFilled()}\r\n            onClick={() => {\r\n              props.addMember(newmemberAddress, votingpower);\r\n              handleNewMemberModalClose();\r\n            }}\r\n          >\r\n            Add New Member\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showMemberModal} onHide={handleMemberModalClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Remove Memnber</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <FloatingLabel\r\n              controlId=\"inputAddress\"\r\n              label=\"MemberAddress\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setMemberAddress(e.target.value);\r\n                }}\r\n                placeholder=\"Address\"\r\n              />\r\n            </FloatingLabel>\r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleMemberModalClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isMemberFormFilled()}\r\n            onClick={() => {\r\n              props.removeMember(memberAddress);\r\n              handleMemberModalClose();\r\n            }}\r\n          >\r\n            Remove Member\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Card, Badge, Col, Stack, Button, Row } from \"react-bootstrap\";\r\n\r\nexport const Proposals = (props) => {\r\n  return (\r\n    <Row xs={1} md={3} className=\"g-4\">\r\n      {props.proposals.map((proposal) => (\r\n        <Col key={proposal.index}>\r\n          <Card className=\"h-100\">\r\n            <Card.Header>\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {proposal.proposalId} ID\r\n                </Badge>\r\n\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {proposal.yesVotes} yes Votes\r\n                </Badge>\r\n\r\n                <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                  {proposal.noVotes} no Votes\r\n                </Badge>\r\n              </Stack>\r\n            </Card.Header>\r\n            <Card.Body className=\"d-flex  flex-column text-center text-dark\">\r\n              <Card.Title>{proposal.description}</Card.Title>\r\n              {props.walletAddress === proposal.proposer && (\r\n                <Button\r\n                  variant=\"primary mt-2\"\r\n                  onClick={() => props.executeProposal(proposal.proposalId)}\r\n                >\r\n                  Execute Proposal\r\n                </Button>\r\n              )}\r\n\r\n              <form>\r\n                <div class=\"form-r mt-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => props.vote(proposal.proposalId, true)}\r\n                    class=\"btn btn-dark mt-1\"\r\n                  >\r\n                    Vote Yes\r\n                  </button>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => props.vote(proposal.proposalId, false)}\r\n                    class=\"btn btn-dark mt-1\"\r\n                  >\r\n                    Vote No\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport Home from \"./components/home\";\r\nimport { Proposals } from \"./components/proposals\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\r\nimport celodao from \"./contracts/celo-dao.abi.json\";\r\n\r\nconst ERC20_DECIMALS = 18;\r\nconst contractAddress = \"0x69dfb020bA12Ce303118E3eF81f9b9E4eB08cE17\";\r\n\r\nfunction App() {\r\n  const [contract, setcontract] = useState(null);\r\n  const [address, setAddress] = useState(null);\r\n  const [kit, setKit] = useState(null);\r\n  const [cUSDBalance, setcUSDBalance] = useState(0);\r\n  const [proposals, setProposals] = useState([]);\r\n\r\n  const connectToWallet = async () => {\r\n    if (window.celo) {\r\n      try {\r\n        await window.celo.enable();\r\n        const web3 = new Web3(window.celo);\r\n        let kit = newKitFromWeb3(web3);\r\n\r\n        const accounts = await kit.web3.eth.getAccounts();\r\n        const user_address = accounts[0];\r\n        kit.defaultAccount = user_address;\r\n\r\n        await setAddress(user_address);\r\n        await setKit(kit);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"Error Occurred\");\r\n    }\r\n  };\r\n\r\n  const getBalance = useCallback(async () => {\r\n    try {\r\n      const balance = await kit.getTotalBalance(address);\r\n      const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\r\n\r\n      const contract = new kit.web3.eth.Contract(celodao, contractAddress);\r\n      setcontract(contract);\r\n      setcUSDBalance(USDBalance);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [address, kit]);\r\n\r\n  const getProposals = useCallback(async () => {\r\n    const proposalsLength = await contract.methods.getProposalsLength().call();\r\n    const proposals = [];\r\n    for (let index = 0; index < proposalsLength; index++) {\r\n      let _proposals = new Promise(async (resolve, reject) => {\r\n        let proposal = await contract.methods.getProposal(index).call();\r\n\r\n        resolve({\r\n          index: index,\r\n          proposalId: proposal[0],\r\n          proposer: proposal[1],\r\n          description: proposal[2],\r\n          yesVotes: proposal[3],\r\n          noVotes: proposal[4],\r\n          executed: proposal[6],\r\n        });\r\n      });\r\n      proposals.push(_proposals);\r\n    }\r\n\r\n    const _proposals = await Promise.all(proposals);\r\n    setProposals(_proposals);\r\n  }, [contract]);\r\n\r\n  const addProposal = async (_description) => {\r\n    try {\r\n      await contract.methods\r\n        .createProposal(_description)\r\n        .send({ from: address });\r\n      getProposals();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const addMember = async (_address, _votingPower) => {\r\n    try {\r\n      await contract.methods\r\n        .addMember(_address, _votingPower)\r\n        .send({ from: address });\r\n      getProposals();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const removeMember = async (_address) => {\r\n    try {\r\n      await contract.methods.removeMember(_address).send({ from: address });\r\n      getProposals();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const vote = async (_proposalId, _vote) => {\r\n    try {\r\n      await contract.methods.vote(_proposalId, _vote).send({ from: address });\r\n      getProposals();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const executeProposal = async (_proposalId) => {\r\n    try {\r\n      await contract.methods\r\n        .executedProposal(_proposalId)\r\n        .send({ from: address });\r\n      getProposals();\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectToWallet();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (kit && address) {\r\n      getBalance();\r\n    }\r\n  }, [kit, address, getBalance]);\r\n\r\n  useEffect(() => {\r\n    if (contract) {\r\n      getProposals();\r\n    }\r\n  }, [contract, getProposals]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Home\r\n        cUSDBalance={cUSDBalance}\r\n        addMember={addMember}\r\n        addProposal={addProposal}\r\n        removeMember={removeMember}\r\n      />\r\n      <Proposals\r\n        proposals={proposals}\r\n        vote={vote}\r\n        executeProposal={executeProposal}\r\n        walletAddress={address}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}